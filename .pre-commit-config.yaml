repos:
  - repo: local
    hooks:
      - id: check-governed-embeddings
        name: Check for ungoverned embedding calls
        entry: python scripts/check_governed_embeddings.py
        language: system
        pass_filenames: false
        files: '\.py$'
      - id: forbid-sqlite3-connect
        name: Prevent direct sqlite3.connect usage
        entry: python scripts/check_sqlite_connections.py
        language: system
        pass_filenames: true
        files: '\.py$'
      - id: check-static-paths
        name: Prevent static .py path references
        entry: bash -c 'python tools/check_static_paths.py $(git ls-files "*.py")'
        language: system
        pass_filenames: false
      - id: check-dynamic-paths
        name: Ensure dynamic paths use resolve_path
        entry: python tools/check_dynamic_paths.py
        language: system
        pass_filenames: true
        files: '\.py$'
      - id: forbid-stripe-imports
        name: Prevent direct Stripe imports
        entry: python scripts/check_stripe_imports.py
        language: system
        pass_filenames: true
        files: '\.py$'
      - id: forbid-stripe-keys
        name: Prevent Stripe live keys or endpoints
        entry: python scripts/check_stripe_imports.py --keys
        language: system
        pass_filenames: true
        types: [text]
      - id: forbid-raw-stripe-usage
        name: Prevent raw Stripe keys or endpoints
        entry: python scripts/check_raw_stripe_usage.py
        language: system
        pass_filenames: false
        files: '\.py$'
      # Ensure functions that generate prompts always supply a context_builder
      # and ban direct Prompt instantiation.
      - id: check-context-builder-usage
        name: Enforce ContextBuilder usage and disallow direct Prompt()
        entry: python scripts/check_context_builder_usage.py
        language: system
        pass_filenames: false
        files: '\.py$'
      - id: check-self-coding-integrity
        name: Prevent direct SelfCodingEngine patch usage
        entry: python tools/check_self_coding_integrity.py
        language: system
        pass_filenames: true
        files: '\.py$'
      - id: check-self-coding-registration
        name: Ensure exported bots are internalized or decorated
        entry: python tools/check_self_coding_registration.py
        language: system
        pass_filenames: false
        files: '\.py$'
      - id: find-unmanaged-bots
        name: Check for unmanaged bots
        entry: python tools/find_unmanaged_bots.py
        language: system
        pass_filenames: false
        files: '\.py$'
      # Verify that SelfCodingEngine bots declare the self_coding_managed decorator
      - id: check-coding-bot-decorators
        name: Ensure SelfCodingEngine bots use @self_coding_managed
        entry: python tools/check_coding_bot_decorators.py
        language: system
        pass_filenames: false
        files: '\.py$'
      - id: check-engine-generate-helper
        name: Prevent unwrapped engine.generate_helper usage
        entry: python tools/check_engine_generate_helper_wrapping.py
        language: system
        pass_filenames: true
        files: '\.py$'
      - id: check-self-coding-usage
        name: Detect direct engine.generate_helper usage
        entry: python tools/check_self_coding_usage.py
        language: system
        pass_filenames: true
        files: '\.py$'
      - id: check-self-coding-decorator
        name: Ensure helper callers use @self_coding_managed
        entry: python tools/check_self_coding_decorator.py
        language: system
        pass_filenames: false
        files: '\.py$'
      - id: check-evolution-orchestrator
        name: Ensure internalized bots specify evolution orchestrator
        entry: python tools/check_evolution_orchestrator.py
        language: system
        pass_filenames: false
        files: '\.py$'
      - id: self-coding-audit
        name: Audit for unmanaged bot classes
        entry: python self_coding_audit.py
        language: system
        pass_filenames: false
        files: '\.py$'
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
