"""initial schema

Revision ID: 0001
Revises: 
Create Date: 2025-06-25 02:04:01.743047

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0001'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bots',
    sa.Column('bot_id', sa.Integer(), nullable=False),
    sa.Column('bot_name', sa.String(), nullable=True),
    sa.Column('bot_type', sa.String(), nullable=True),
    sa.Column('assigned_task', sa.String(), nullable=True),
    sa.Column('parent_bot_id', sa.Integer(), nullable=True),
    sa.Column('dependencies', sa.Text(), nullable=True),
    sa.Column('resource_estimates', sa.Text(), nullable=True),
    sa.Column('creation_date', sa.String(), nullable=True),
    sa.Column('last_modification_date', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('estimated_profit', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['parent_bot_id'], ['bots.bot_id'], ),
    sa.PrimaryKeyConstraint('bot_id')
    )
    op.create_table('code',
    sa.Column('code_id', sa.Integer(), nullable=False),
    sa.Column('template_type', sa.String(), nullable=True),
    sa.Column('language', sa.String(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('complexity_score', sa.Float(), nullable=True),
    sa.Column('code_summary', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('code_id')
    )
    op.create_table('discrepancies',
    sa.Column('discrepancy_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('discrepancy_id')
    )
    op.create_table('enhancements',
    sa.Column('enhancement_id', sa.Integer(), nullable=False),
    sa.Column('description_of_change', sa.Text(), nullable=True),
    sa.Column('reason_for_change', sa.Text(), nullable=True),
    sa.Column('performance_delta', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.String(), nullable=True),
    sa.Column('triggered_by', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('enhancement_id')
    )
    op.create_table('errors',
    sa.Column('error_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.String(), nullable=True),
    sa.Column('error_type', sa.String(), nullable=True),
    sa.Column('error_description', sa.Text(), nullable=True),
    sa.Column('resolution_status', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('error_id')
    )
    op.create_table('information',
    sa.Column('info_id', sa.Integer(), nullable=False),
    sa.Column('data_type', sa.String(), nullable=True),
    sa.Column('source_url', sa.String(), nullable=True),
    sa.Column('date_collected', sa.String(), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('validated', sa.Boolean(), nullable=True),
    sa.Column('validation_notes', sa.Text(), nullable=True),
    sa.Column('keywords', sa.Text(), nullable=True),
    sa.Column('data_depth_score', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('info_id')
    )
    op.create_table('models',
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('model_name', sa.String(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('date_discovered', sa.String(), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('initial_roi_prediction', sa.Float(), nullable=True),
    sa.Column('final_roi_prediction', sa.Float(), nullable=True),
    sa.Column('current_status', sa.String(), nullable=True),
    sa.Column('enhancement_count', sa.Integer(), nullable=True),
    sa.Column('discrepancy_flag', sa.Boolean(), nullable=True),
    sa.Column('error_flag', sa.Boolean(), nullable=True),
    sa.Column('profitability_score', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('model_id'),
    sa.UniqueConstraint('model_name')
    )
    op.create_table('workflows',
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.Column('workflow_name', sa.String(), nullable=True),
    sa.Column('task_tree', sa.Text(), nullable=True),
    sa.Column('dependencies', sa.Text(), nullable=True),
    sa.Column('resource_allocation_plan', sa.Text(), nullable=True),
    sa.Column('created_from', sa.String(), nullable=True),
    sa.Column('enhancement_links', sa.Text(), nullable=True),
    sa.Column('discrepancy_links', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('estimated_profit_per_bot', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('workflow_id')
    )
    op.create_table('bot_enhancements',
    sa.Column('bot_id', sa.Integer(), nullable=False),
    sa.Column('enhancement_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bot_id'], ['bots.bot_id'], ),
    sa.ForeignKeyConstraint(['enhancement_id'], ['enhancements.enhancement_id'], ),
    sa.PrimaryKeyConstraint('bot_id', 'enhancement_id')
    )
    op.create_table('bot_errors',
    sa.Column('bot_id', sa.Integer(), nullable=False),
    sa.Column('error_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bot_id'], ['bots.bot_id'], ),
    sa.ForeignKeyConstraint(['error_id'], ['errors.error_id'], ),
    sa.PrimaryKeyConstraint('bot_id', 'error_id')
    )
    op.create_table('bot_models',
    sa.Column('bot_id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bot_id'], ['bots.bot_id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], ),
    sa.PrimaryKeyConstraint('bot_id', 'model_id')
    )
    op.create_table('bot_workflows',
    sa.Column('bot_id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bot_id'], ['bots.bot_id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.workflow_id'], ),
    sa.PrimaryKeyConstraint('bot_id', 'workflow_id')
    )
    op.create_table('code_bots',
    sa.Column('code_id', sa.Integer(), nullable=False),
    sa.Column('bot_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bot_id'], ['bots.bot_id'], ),
    sa.ForeignKeyConstraint(['code_id'], ['code.code_id'], ),
    sa.PrimaryKeyConstraint('code_id', 'bot_id')
    )
    op.create_table('code_enhancements',
    sa.Column('code_id', sa.Integer(), nullable=False),
    sa.Column('enhancement_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['code_id'], ['code.code_id'], ),
    sa.ForeignKeyConstraint(['enhancement_id'], ['enhancements.enhancement_id'], ),
    sa.PrimaryKeyConstraint('code_id', 'enhancement_id')
    )
    op.create_table('code_errors',
    sa.Column('code_id', sa.Integer(), nullable=False),
    sa.Column('error_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['code_id'], ['code.code_id'], ),
    sa.ForeignKeyConstraint(['error_id'], ['errors.error_id'], ),
    sa.PrimaryKeyConstraint('code_id', 'error_id')
    )
    op.create_table('discrepancy_bots',
    sa.Column('discrepancy_id', sa.Integer(), nullable=False),
    sa.Column('bot_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bot_id'], ['bots.bot_id'], ),
    sa.ForeignKeyConstraint(['discrepancy_id'], ['discrepancies.discrepancy_id'], ),
    sa.PrimaryKeyConstraint('discrepancy_id', 'bot_id')
    )
    op.create_table('discrepancy_enhancements',
    sa.Column('discrepancy_id', sa.Integer(), nullable=False),
    sa.Column('enhancement_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['discrepancy_id'], ['discrepancies.discrepancy_id'], ),
    sa.ForeignKeyConstraint(['enhancement_id'], ['enhancements.enhancement_id'], ),
    sa.PrimaryKeyConstraint('discrepancy_id', 'enhancement_id')
    )
    op.create_table('discrepancy_models',
    sa.Column('discrepancy_id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['discrepancy_id'], ['discrepancies.discrepancy_id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], ),
    sa.PrimaryKeyConstraint('discrepancy_id', 'model_id')
    )
    op.create_table('discrepancy_workflows',
    sa.Column('discrepancy_id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['discrepancy_id'], ['discrepancies.discrepancy_id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.workflow_id'], ),
    sa.PrimaryKeyConstraint('discrepancy_id', 'workflow_id')
    )
    op.create_table('enhancement_bots',
    sa.Column('enhancement_id', sa.Integer(), nullable=False),
    sa.Column('bot_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bot_id'], ['bots.bot_id'], ),
    sa.ForeignKeyConstraint(['enhancement_id'], ['enhancements.enhancement_id'], ),
    sa.PrimaryKeyConstraint('enhancement_id', 'bot_id')
    )
    op.create_table('enhancement_models',
    sa.Column('enhancement_id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['enhancement_id'], ['enhancements.enhancement_id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], ),
    sa.PrimaryKeyConstraint('enhancement_id', 'model_id')
    )
    op.create_table('enhancement_workflows',
    sa.Column('enhancement_id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['enhancement_id'], ['enhancements.enhancement_id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.workflow_id'], ),
    sa.PrimaryKeyConstraint('enhancement_id', 'workflow_id')
    )
    op.create_table('error_bots',
    sa.Column('error_id', sa.Integer(), nullable=False),
    sa.Column('bot_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bot_id'], ['bots.bot_id'], ),
    sa.ForeignKeyConstraint(['error_id'], ['errors.error_id'], ),
    sa.PrimaryKeyConstraint('error_id', 'bot_id')
    )
    op.create_table('error_codes',
    sa.Column('error_id', sa.Integer(), nullable=False),
    sa.Column('code_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['code_id'], ['code.code_id'], ),
    sa.ForeignKeyConstraint(['error_id'], ['errors.error_id'], ),
    sa.PrimaryKeyConstraint('error_id', 'code_id')
    )
    op.create_table('error_discrepancies',
    sa.Column('error_id', sa.Integer(), nullable=False),
    sa.Column('discrepancy_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['discrepancy_id'], ['discrepancies.discrepancy_id'], ),
    sa.ForeignKeyConstraint(['error_id'], ['errors.error_id'], ),
    sa.PrimaryKeyConstraint('error_id', 'discrepancy_id')
    )
    op.create_table('error_models',
    sa.Column('error_id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['error_id'], ['errors.error_id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], ),
    sa.PrimaryKeyConstraint('error_id', 'model_id')
    )
    op.create_table('information_bots',
    sa.Column('info_id', sa.Integer(), nullable=False),
    sa.Column('bot_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bot_id'], ['bots.bot_id'], ),
    sa.ForeignKeyConstraint(['info_id'], ['information.info_id'], ),
    sa.PrimaryKeyConstraint('info_id', 'bot_id')
    )
    op.create_table('information_models',
    sa.Column('info_id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['info_id'], ['information.info_id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], ),
    sa.PrimaryKeyConstraint('info_id', 'model_id')
    )
    op.create_table('information_workflows',
    sa.Column('info_id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['info_id'], ['information.info_id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.workflow_id'], ),
    sa.PrimaryKeyConstraint('info_id', 'workflow_id')
    )
    op.create_table('model_discrepancies',
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('discrepancy_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['discrepancy_id'], ['discrepancies.discrepancy_id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], ),
    sa.PrimaryKeyConstraint('model_id', 'discrepancy_id')
    )
    op.create_table('model_errors',
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('error_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['error_id'], ['errors.error_id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], ),
    sa.PrimaryKeyConstraint('model_id', 'error_id')
    )
    op.create_table('model_workflows',
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.workflow_id'], ),
    sa.PrimaryKeyConstraint('model_id', 'workflow_id')
    )
    op.create_table('workflow_bots',
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.Column('bot_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bot_id'], ['bots.bot_id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.workflow_id'], ),
    sa.PrimaryKeyConstraint('workflow_id', 'bot_id')
    )
    op.create_table('workflow_models',
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.workflow_id'], ),
    sa.PrimaryKeyConstraint('workflow_id', 'model_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workflow_models')
    op.drop_table('workflow_bots')
    op.drop_table('model_workflows')
    op.drop_table('model_errors')
    op.drop_table('model_discrepancies')
    op.drop_table('information_workflows')
    op.drop_table('information_models')
    op.drop_table('information_bots')
    op.drop_table('error_models')
    op.drop_table('error_discrepancies')
    op.drop_table('error_codes')
    op.drop_table('error_bots')
    op.drop_table('enhancement_workflows')
    op.drop_table('enhancement_models')
    op.drop_table('enhancement_bots')
    op.drop_table('discrepancy_workflows')
    op.drop_table('discrepancy_models')
    op.drop_table('discrepancy_enhancements')
    op.drop_table('discrepancy_bots')
    op.drop_table('code_errors')
    op.drop_table('code_enhancements')
    op.drop_table('code_bots')
    op.drop_table('bot_workflows')
    op.drop_table('bot_models')
    op.drop_table('bot_errors')
    op.drop_table('bot_enhancements')
    op.drop_table('workflows')
    op.drop_table('models')
    op.drop_table('information')
    op.drop_table('errors')
    op.drop_table('enhancements')
    op.drop_table('discrepancies')
    op.drop_table('code')
    op.drop_table('bots')
    # ### end Alembic commands ###
